
<h1>Week-4 Blog</h1>

<p>
    This week I experimented on the AngularJS.
</p>

<table>
    <tr>
        <th>#</th>
        <th>Title</th>
    </tr>
    <tr>
        <td style="text-align:center">1</td>
        <td><a href="http://net4.ccs.neu.edu/home/songchi/experiments/week4/1-angular-ordering.html" target="_blank">AngularJS - Ordering</a></td>
    </tr>
    <tr>
        <td style="text-align:center">2</td>
        <td><a href="http://net4.ccs.neu.edu/home/songchi/experiments/week4/2-angular-filter.html" target="_blank">AngularJS - Filter</a></td>
    </tr>
    <tr>
        <td style="text-align:center">3</td>
        <td><a href="http://net4.ccs.neu.edu/home/songchi/experiments/week4/3-angular-enlarge-image.html" target="_blank">AngularJS & Boostrape - Enlarge Image</a></td>
    </tr>
    <tr>
        <td style="text-align:center">4</td>
        <td><a href="http://net4.ccs.neu.edu/home/songchi/experiments/week4/4-angular-dblclick.html" target="_blank">AngularJS - DoubleClick</a></td>
    </tr>
    <tr>
        <td style="text-align:center">5</td>
        <td><a href="http://net4.ccs.neu.edu/home/songchi/experiments/week4/5-angular-hide-show.html" target="_blank">AngularJS - Hide/Show</a></td>
    </tr>
</table>

<h3>
    AngularJS - Ordering
</h3>
<p>
    We already know how to fetch data and put them into a table in AngularJS through professor's example. During the class demo, I noticed that when professor searched for some movie names and got the results into tables, he had to scroll up and down to find the exactly movie he was looking for. If we can sort the results by year or rating, it will be easier for the professor to look for his movie.
    So in this experiment, I will use the orderBy feature from the $filter ng component to sort columns of table.
</p>

<h3>
    AngularJS - Filter
</h3>
<p>
    In the last experiment, we've implemented sorting the columns to help the professor to locate his movie easier. If we could create a input field that type the keywords related to professor's target movie to narrow down the table results, it will help our professor find his movie even faster. So in this experiment, we will use the filter feature in Filter component to implement that.
</p>

<h3>
    AngularJS & Boostrape - Enlarge Image
</h3>
<p>
    Thanks to the first two experiments, our professor now can easily find his movies. Are there anything else we can do to satisfy our professor more? Sometimes by just looking at the poster people can easily tell which movie is, since a picture tells more than words. However, our poster images in the table are too small, why don't we add a feature that just by clicking the small poster image, a same but larger poster will present to our professor?
    So in this experiment, I will use the combination of AngularJS and Bootsrape(modals) to implement that image enlarge feature.
</p>

<h3>
    AngularJS - DoubleClick
</h3>
<p>
    The professor has shown us how to create buttons to add and remove favorite movies. A more convenient way could be that if we can add or remove favorite movies by just clicking the row of movie in the display table. Also we can display the counter to show the number of movies in the Favorite Movies. So in this experiment, I'll implement this.
</p>


<h3>
    AngularJS - Hide/Show
</h3>
<p>
    Now that we got the moives displaying in the table, it will be more nifty if we can edit the table columns to customize which information of the movies to show/hide. So in this experiment, I'll implement this feature by using the AngluarJS ng-hide directive.
</p>

